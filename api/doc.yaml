openapi: 3.0.3
info:
  title: Campus
  contact:
    email: test@kpi.ua
  license:
    name: MIT License
  version: 0.0.1
servers:
  - url: https://api.campus.kpi.ua/
tags:
  - name: auth
    description: user auth
  - name: user
    description: user info
  - name: lessons
    description: lessons info

paths:
  /login:
    get:
      tags:
        - auth
      summary: login using credentials
      description: login using credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      responses:
        '200':
          description: logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
          headers:
            Set-Cookie:
              description: auth token
              schema:
                type: string
                example: token=abcde12345; Path=/; HttpOnly

        '400':
          description: Invalid credentials
  /reset:
    get:
      tags:
        - auth
      summary: reset password
      description: request email for password reset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@kpi.ua
        required: true
      responses:
        '200':
          description: sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  Captcha:
                    type: string
                  UserIdentifier:
                    type: string
        '400':
          description: Invalid email
  /find-curator:
    get:
      tags:
        - user
      summary: find curator by name or group

      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: group name
      responses:
        '200':
          description: return curator list by name of group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curator'
  /lessons:
    get:
      parameters:
        - $ref: '#/components/parameters/semesterParam'
        - $ref: '#/components/parameters/yearParam'
      tags:
        - lessons
      summary: get lessons list
      security:
        - cookieAuth: [ ]
      responses:
        '200':
          description: user lessons list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lesson'
        '400':
          description: Invalid request
  /lessons/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      tags:
        - lessons
      summary: get lesson
      security:
        - cookieAuth: [ ]
      responses:
        '200':
          description: lesson
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
        '400':
          description: Invalid request
  /user:
    get:
      tags:
        - user
      description: get user info
      security:
        - cookieAuth: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /attestation:
    get:
      parameters:
        - $ref: '#/components/parameters/semesterParam'
        - $ref: '#/components/parameters/yearParam'
      tags:
        - Attestation
      description: get Attestation
      security:
        - cookieAuth: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attestation'
  /session:
    get:
      parameters:
        - $ref: '#/components/parameters/semesterParam'
        - $ref: '#/components/parameters/yearParam'
      tags:
        - Session
      description: get Session
      security:
        - cookieAuth: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
components:
  parameters:
    semesterParam:
      in: query
      name: semester
      required: false
      schema:
        type: string
        enum:
          - 1
          - 2
          - all
      description: specify which semester, if omitted return latest
    yearParam:
      in: query
      name: year
      required: false
      schema:
        type: string
      description: specify which year, if omitted return latest, use all to return all data
  schemas:
    Credentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    News:
      type: object
      properties:
        id:
          type: number
        subject:
          type: string
        text:
          type: string
        start:
          type: string
        end:
          type: string
        author:
          type: string
        description:
          type: string
    Lesson:
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
        teacher:
          description: Teacher name or object
          type: string
        total:
          type: number
        occurrences:
          type: array
          description: omit when returning list of lessons
          items:
            type: object
            properties:
              date:
                type: string
              mark:
                type: number
              teacher:
                type: string
    Session:
      type: object
      properties:
        id:
          type: number
        mark:
          type: number
        subject:
          type: string
        name:
          type: string
        teacher:
          type: string
        typeOfControl:
          type: string
          enum:
            - exam
            - credit
        typeInfo:
          type: string
          enum:
            - main
            - additional
            - coma
        date:
          type: string
        status:
          type: string
    Attestation:
      type: object
      properties:
        subject:
          type: string
        teacher:
          type: string
        first:
          type: boolean
        second:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        userIdentifier:
          type: string
        username:
          type: string
        modules:
          type: string
        sid:
          type: string
        tgAuthLinked:
          type: boolean

        info:
          type: object
          properties:
            fullName:
              type: string
            fullNameEng:
              type: string
            credo:
              type: string
            photo:
              type: string
            scientificInterest:
              type: string

        position:
          type: object
          properties:
            subdivision:
              type: string
            group:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
            form:
              type: string
            course:
              type: number
            status:
              type: string
            speciality:
              type: string

        contacts:
          description: array of user contacts info, e.g email, tg, skype, fax, etc
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              value:
                type: string

    Curator:
      type: object
      properties:
        cathedra:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
        curator:
          type: object
          properties:
            id:
              type: number
            userIdentifier:
              type: string
            fullName:
              type: string
        id:
          type: number
        name:
          type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    Bearer:
      type: http
      scheme: bearer
