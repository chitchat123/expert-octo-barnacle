openapi: 3.0.3
info:
  title: Campus
  contact:
    email: test@kpi.ua
  license:
    name: MIT License
  version: 0.0.1
servers:
  - url: https://api.campus.kpi.ua/
tags:
  - name: auth
    description: user auth
  - name: user
    description: user info
  - name: lessons
    description: lessons info

paths:
  /login:
    get:
      tags:
        - auth
      summary: login using credentials
      description: login using credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      responses:
        '200':
          description: logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
          headers:
            Set-Cookie:
              description: auth token
              schema:
                type: string
                example: token=abcde12345; Path=/; HttpOnly

        '400':
          description: Invalid credentials

  /reset:
    get:
      tags:
        - auth
      summary: reset password
      description: reques email for password reset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@kpi.ua
        required: true
      responses:
        '200':
          description: logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid email
  /find-curator:
    get:
      tags:
        - user
      summary: find curator by name or group
      responses:
        '200':
          description: return curator list by name of group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /lessons:
    get:
      tags:
        - lessons
      summary: get lessons list
      security:
        - cookieAuth: [ ]
      responses:
        '200':
          description: user lessons list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lesson'
        '400':
          description: Invalid request
  /lessons/{id}:
    get:
      tags:
        - lessons
      summary: get lesson
      security:
        - cookieAuth: [ ]
      responses:
        '200':
          description: lesson
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
        '400':
          description: Invalid request
  /user:
    get:
      tags:
        - user
      description: get user info
      parameters: []
      responses:
        "200":
          description: "OK"
    post:
      tags:
        - user
      description: edit user info
      parameters: [ ]
      responses:
        "200":
          description: "OK"
components:
  schemas:
    Credentials:
      type: object
      properties:
        username:
          type: string
          example: username
        password:
          type: string
          example: password
    News:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: news title
        content:
          type: string
          example: news content
    Lesson:
      type: object
      properties:
        id:
          type: integer
          example: 1
    Session:
      type: object
      properties:
        id:
          type: integer
          example: 1
    Attestation:
      type: object
      properties:
        id:
          type: integer
          example: 1
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    api_key:
      type: apiKey
      name: api_key
      in: header
